// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: c4FCQiVEmUqfPef3MjSmg8
// Component: SDagfCRh-2CQ

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { NavigationBar } from "@plasmicpkgs/plasmic-nav";

import { useScreenVariants as useScreenVariantsqExrow76Zrl } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: QExrow-76Zrl/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: c4FCQiVEmUqfPef3MjSmg8/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: SDagfCRh-2CQ/css

import ArrowRightsvgIcon from "./icons/PlasmicIcon__ArrowRightsvg"; // plasmic-import: YmZHPP8Bqtaf/icon

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: Flex__<"div">;
  section?: Flex__<"section">;
  navigationBar?: Flex__<typeof NavigationBar>;
  hero?: Flex__<typeof PlasmicImg__>;
  heading?: Flex__<"div">;
  container?: Flex__<"div">;
  apriwa?: Flex__<"div">;
  asc?: Flex__<"div">;
  citadel?: Flex__<"div">;
  enginePlus?: Flex__<"div">;
  jvs?: Flex__<"div">;
  porsche?: Flex__<"div">;
  rizqyMotorsport?: Flex__<"div">;
  semenMerahPutih?: Flex__<"div">;
  siloMaritime?: Flex__<"div">;
};

export interface DefaultHomepageProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsqExrow76Zrl()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <section
            data-plasmic-name={"section"}
            data-plasmic-override={overrides.section}
            className={classNames(projectcss.all, sty.section)}
          >
            <NavigationBar
              data-plasmic-name={"navigationBar"}
              data-plasmic-override={overrides.navigationBar}
              brand={
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__ugMcO
                  )}
                  component={Link}
                  href={"#"}
                  platform={"nextjs"}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img___5Sik0)}
                    displayHeight={"40px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    src={{
                      src: "/plasmic/blank_website_mobile_first/images/cncXPscIsvg.svg",
                      fullWidth: 449.49,
                      fullHeight: 98.63,
                      aspectRatio: 4.557335
                    }}
                  />
                </PlasmicLink__>
              }
              className={classNames("__wab_instance", sty.navigationBar)}
              closeButton={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__yh6Fr)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  src={"https://static1.plasmic.app/close.svg"}
                />
              }
              itemsGap={8}
              menuItems={
                <React.Fragment>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__yNWnR
                    )}
                    component={Link}
                    href={"/"}
                    platform={"nextjs"}
                  >
                    {"Home"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__h3JzT
                    )}
                    component={Link}
                    href={"/"}
                    platform={"nextjs"}
                  >
                    {"About"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__omr0V
                    )}
                    component={Link}
                    href={"/"}
                    platform={"nextjs"}
                  >
                    {"Contact"}
                  </PlasmicLink__>
                </React.Fragment>
              }
              openButton={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__i4GIy)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  src={"https://static1.plasmic.app/menu.svg"}
                />
              }
              responsiveBreakpoint={768}
            />

            <PlasmicImg__
              data-plasmic-name={"hero"}
              data-plasmic-override={overrides.hero}
              alt={""}
              className={classNames(sty.hero)}
              displayHeight={"320px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={
                hasVariant(globalVariants, "screen", "desktopOnly")
                  ? "100%"
                  : "510px"
              }
              loading={"lazy"}
              src={{
                src: "/plasmic/blank_website_mobile_first/images/heroImagepng.png",
                fullWidth: 750,
                fullHeight: 660,
                aspectRatio: undefined
              }}
            />

            <div
              data-plasmic-name={"heading"}
              data-plasmic-override={overrides.heading}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.heading
              )}
            >
              {"Collections"}
            </div>
            <Stack__
              as={"div"}
              data-plasmic-name={"container"}
              data-plasmic-override={overrides.container}
              hasGap={true}
              className={classNames(projectcss.all, sty.container)}
            >
              <div
                data-plasmic-name={"apriwa"}
                data-plasmic-override={overrides.apriwa}
                className={classNames(projectcss.all, sty.apriwa)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___6Pbwl)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__g74J
                    )}
                  >
                    {"Apriwa\nMotorsport"}
                  </div>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__ad4B5)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ztio2
                      )}
                    >
                      {"Shop Now"}
                    </div>
                    <ArrowRightsvgIcon
                      className={classNames(projectcss.all, sty.svg__pzbGr)}
                      role={"img"}
                    />
                  </Stack__>
                </Stack__>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__fJzD6)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"auto"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"160px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/apriwa2Xpng2.png",
                    fullWidth: 420,
                    fullHeight: 480,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div
                data-plasmic-name={"asc"}
                data-plasmic-override={overrides.asc}
                className={classNames(projectcss.all, sty.asc)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__iRRoD)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xCnpo
                    )}
                  >
                    {"ASC"}
                  </div>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__nlsgv)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___8WXHq
                      )}
                    >
                      {"Shop Now"}
                    </div>
                    <ArrowRightsvgIcon
                      className={classNames(projectcss.all, sty.svg__uaRbc)}
                      role={"img"}
                    />
                  </Stack__>
                </Stack__>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___5X3V4)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"160px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/asc2X2Xpng2.png",
                    fullWidth: 420,
                    fullHeight: 480,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div
                data-plasmic-name={"citadel"}
                data-plasmic-override={overrides.citadel}
                className={classNames(projectcss.all, sty.citadel)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__yaHgl)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lbdIp
                    )}
                  >
                    {"Citadel \nRacing Team"}
                  </div>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__jQzzP)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ydcdg
                      )}
                    >
                      {"Shop Now"}
                    </div>
                    <ArrowRightsvgIcon
                      className={classNames(projectcss.all, sty.svg__jDDg)}
                      role={"img"}
                    />
                  </Stack__>
                </Stack__>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__tLfKi)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"auto"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"160px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/citadel2Xpng.png",
                    fullWidth: 420,
                    fullHeight: 480,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div
                data-plasmic-name={"enginePlus"}
                data-plasmic-override={overrides.enginePlus}
                className={classNames(projectcss.all, sty.enginePlus)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__o6HuT)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gxmbg
                    )}
                  >
                    {"Engine Plus \nMotorsport"}
                  </div>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___564Ls)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xZgF
                      )}
                    >
                      {"Shop Now"}
                    </div>
                    <ArrowRightsvgIcon
                      className={classNames(projectcss.all, sty.svg__goR9K)}
                      role={"img"}
                    />
                  </Stack__>
                </Stack__>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__bud4E)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"160px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/enginePlus2X2X2Xpng.png",
                    fullWidth: 420,
                    fullHeight: 480,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div
                data-plasmic-name={"jvs"}
                data-plasmic-override={overrides.jvs}
                className={classNames(projectcss.all, sty.jvs)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__mi6Lc)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pMtFg
                    )}
                  >
                    {"JVS\nMotosport"}
                  </div>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__fWYwL)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___1Jwcx
                      )}
                    >
                      {"Shop Now"}
                    </div>
                    <ArrowRightsvgIcon
                      className={classNames(projectcss.all, sty.svg__qzBo)}
                      role={"img"}
                    />
                  </Stack__>
                </Stack__>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__prFrd)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"auto"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"160px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/jvs2X1Png.png",
                    fullWidth: 420,
                    fullHeight: 480,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div
                data-plasmic-name={"porsche"}
                data-plasmic-override={overrides.porsche}
                className={classNames(projectcss.all, sty.porsche)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__ynkes)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__waQOf
                    )}
                  >
                    {"Porsche\nMotorsport"}
                  </div>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__nmk3R)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___7IuCi
                      )}
                    >
                      {"Shop Now"}
                    </div>
                    <ArrowRightsvgIcon
                      className={classNames(projectcss.all, sty.svg__lUuSf)}
                      role={"img"}
                    />
                  </Stack__>
                </Stack__>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__jpCLs)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"160px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/baseBlue2Xpng.png",
                    fullWidth: 420,
                    fullHeight: 480,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div
                data-plasmic-name={"rizqyMotorsport"}
                data-plasmic-override={overrides.rizqyMotorsport}
                className={classNames(projectcss.all, sty.rizqyMotorsport)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__hC2Bz)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__npVUo
                    )}
                  >
                    {"Rizqy \nMotorsport"}
                  </div>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__zZld2)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fa31T
                      )}
                    >
                      {"Shop Now"}
                    </div>
                    <ArrowRightsvgIcon
                      className={classNames(projectcss.all, sty.svg__i38E8)}
                      role={"img"}
                    />
                  </Stack__>
                </Stack__>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__icsh)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"auto"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"160px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/rizqyMotorsport2Xpng.png",
                    fullWidth: 420,
                    fullHeight: 480,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div
                data-plasmic-name={"semenMerahPutih"}
                data-plasmic-override={overrides.semenMerahPutih}
                className={classNames(projectcss.all, sty.semenMerahPutih)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___4OyYv)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kqgdo
                    )}
                  >
                    {"Semen Merah \nPutih "}
                  </div>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__sTzDv)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vfKqb
                      )}
                    >
                      {"Shop Now"}
                    </div>
                    <ArrowRightsvgIcon
                      className={classNames(projectcss.all, sty.svg__oxkNy)}
                      role={"img"}
                    />
                  </Stack__>
                </Stack__>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__kv8Y2)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"160px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/semenMerahPutih2X2Xpng.png",
                    fullWidth: 420,
                    fullHeight: 480,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div
                data-plasmic-name={"siloMaritime"}
                data-plasmic-override={overrides.siloMaritime}
                className={classNames(projectcss.all, sty.siloMaritime)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___8SuB)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lsnF
                    )}
                  >
                    {"Silo Maritime\nRacing Team"}
                  </div>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__krpRa)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ollRf
                      )}
                    >
                      {"Shop Now"}
                    </div>
                    <ArrowRightsvgIcon
                      className={classNames(projectcss.all, sty.svg__mPKvO)}
                      role={"img"}
                    />
                  </Stack__>
                </Stack__>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__fr51O)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"auto"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"160px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/btpn2X2Xpng.png",
                    fullWidth: 420,
                    fullHeight: 480,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </Stack__>
          </section>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "section",
    "navigationBar",
    "hero",
    "heading",
    "container",
    "apriwa",
    "asc",
    "citadel",
    "enginePlus",
    "jvs",
    "porsche",
    "rizqyMotorsport",
    "semenMerahPutih",
    "siloMaritime"
  ],
  section: [
    "section",
    "navigationBar",
    "hero",
    "heading",
    "container",
    "apriwa",
    "asc",
    "citadel",
    "enginePlus",
    "jvs",
    "porsche",
    "rizqyMotorsport",
    "semenMerahPutih",
    "siloMaritime"
  ],
  navigationBar: ["navigationBar"],
  hero: ["hero"],
  heading: ["heading"],
  container: [
    "container",
    "apriwa",
    "asc",
    "citadel",
    "enginePlus",
    "jvs",
    "porsche",
    "rizqyMotorsport",
    "semenMerahPutih",
    "siloMaritime"
  ],
  apriwa: ["apriwa"],
  asc: ["asc"],
  citadel: ["citadel"],
  enginePlus: ["enginePlus"],
  jvs: ["jvs"],
  porsche: ["porsche"],
  rizqyMotorsport: ["rizqyMotorsport"],
  semenMerahPutih: ["semenMerahPutih"],
  siloMaritime: ["siloMaritime"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  section: "section";
  navigationBar: typeof NavigationBar;
  hero: typeof PlasmicImg__;
  heading: "div";
  container: "div";
  apriwa: "div";
  asc: "div";
  citadel: "div";
  enginePlus: "div";
  jvs: "div";
  porsche: "div";
  rizqyMotorsport: "div";
  semenMerahPutih: "div";
  siloMaritime: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    section: makeNodeComponent("section"),
    navigationBar: makeNodeComponent("navigationBar"),
    hero: makeNodeComponent("hero"),
    heading: makeNodeComponent("heading"),
    container: makeNodeComponent("container"),
    apriwa: makeNodeComponent("apriwa"),
    asc: makeNodeComponent("asc"),
    citadel: makeNodeComponent("citadel"),
    enginePlus: makeNodeComponent("enginePlus"),
    jvs: makeNodeComponent("jvs"),
    porsche: makeNodeComponent("porsche"),
    rizqyMotorsport: makeNodeComponent("rizqyMotorsport"),
    semenMerahPutih: makeNodeComponent("semenMerahPutih"),
    siloMaritime: makeNodeComponent("siloMaritime"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
