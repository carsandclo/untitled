// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: c4FCQiVEmUqfPef3MjSmg8
// Component: 93mjmyH2CNk2

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { NavigationBar } from "@plasmicpkgs/plasmic-nav";
import Button from "../../Button"; // plasmic-import: WoUXpKFRVp6X/component

import { useScreenVariants as useScreenVariantsqExrow76Zrl } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: QExrow-76Zrl/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: c4FCQiVEmUqfPef3MjSmg8/projectcss
import sty from "./PlasmicBridge.module.css"; // plasmic-import: 93mjmyH2CNk2/css

import ArrowRightsvgIcon from "./icons/PlasmicIcon__ArrowRightsvg"; // plasmic-import: YmZHPP8Bqtaf/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: wSb16lybm7DS/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: m3IaC3t3OSQT/icon

createPlasmicElementProxy;

export type PlasmicBridge__VariantMembers = {};
export type PlasmicBridge__VariantsArgs = {};
type VariantPropType = keyof PlasmicBridge__VariantsArgs;
export const PlasmicBridge__VariantProps = new Array<VariantPropType>();

export type PlasmicBridge__ArgsType = {};
type ArgPropType = keyof PlasmicBridge__ArgsType;
export const PlasmicBridge__ArgProps = new Array<ArgPropType>();

export type PlasmicBridge__OverridesType = {
  root?: Flex__<"div">;
  navigationBar?: Flex__<typeof NavigationBar>;
  tShirt?: Flex__<"a"> & Partial<LinkProps>;
  hoodie?: Flex__<"a"> & Partial<LinkProps>;
  sweater?: Flex__<"a"> & Partial<LinkProps>;
  footer2?: Flex__<"div">;
  logo2?: Flex__<"div">;
  social4?: Flex__<"div">;
  social5?: Flex__<"div">;
  social6?: Flex__<"div">;
  button?: Flex__<typeof Button>;
};

export interface DefaultBridgeProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicBridge__RenderFunc(props: {
  variants: PlasmicBridge__VariantsArgs;
  args: PlasmicBridge__ArgsType;
  overrides: PlasmicBridge__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsqExrow76Zrl()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <NavigationBar
            data-plasmic-name={"navigationBar"}
            data-plasmic-override={overrides.navigationBar}
            brand={
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__ntGk
                )}
                component={Link}
                href={`/`}
                platform={"nextjs"}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__mcTeR)}
                  displayHeight={"40px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/cncXPscIsvg.svg",
                    fullWidth: 449.49,
                    fullHeight: 98.63,
                    aspectRatio: 4.557335
                  }}
                />
              </PlasmicLink__>
            }
            className={classNames("__wab_instance", sty.navigationBar)}
            closeButton={
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__ayLh)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                src={"https://static1.plasmic.app/close.svg"}
              />
            }
            itemsGap={8}
            menuItems={
              <React.Fragment>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link___0M0Os
                  )}
                  component={Link}
                  href={"/"}
                  platform={"nextjs"}
                >
                  {"Home"}
                </PlasmicLink__>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__dYZap
                  )}
                  component={Link}
                  href={"/"}
                  platform={"nextjs"}
                >
                  {"About"}
                </PlasmicLink__>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__nxOxu
                  )}
                  component={Link}
                  href={"/"}
                  platform={"nextjs"}
                >
                  {"Contact"}
                </PlasmicLink__>
              </React.Fragment>
            }
            openButton={
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__elxhP)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                src={"https://static1.plasmic.app/menu.svg"}
              />
            }
            responsiveBreakpoint={768}
          />

          <div className={classNames(projectcss.all, sty.freeBox__rIlEk)}>
            <PlasmicLink__
              data-plasmic-name={"tShirt"}
              data-plasmic-override={overrides.tShirt}
              className={classNames(projectcss.all, projectcss.a, sty.tShirt)}
              component={Link}
              href={`/[slug]`}
              platform={"nextjs"}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__pgNXf)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fj3Y8
                  )}
                >
                  {"T-Shirt"}
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__pmElV)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__oSmCj
                    )}
                  >
                    {"Shop Now"}
                  </div>
                  <ArrowRightsvgIcon
                    className={classNames(projectcss.all, sty.svg__dZimf)}
                    role={"img"}
                  />
                </Stack__>
              </Stack__>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__rGZhU)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"auto"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"160px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/blank_website_mobile_first/images/apriwa2Xpng2.png",
                  fullWidth: 420,
                  fullHeight: 480,
                  aspectRatio: undefined
                }}
              />
            </PlasmicLink__>
            <PlasmicLink__
              data-plasmic-name={"hoodie"}
              data-plasmic-override={overrides.hoodie}
              className={classNames(projectcss.all, projectcss.a, sty.hoodie)}
              component={Link}
              href={`/[slug]`}
              platform={"nextjs"}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___8C3La)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mvRz5
                  )}
                >
                  {"Hoodie"}
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__zEwp7)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kjdQa
                    )}
                  >
                    {"Shop Now"}
                  </div>
                  <ArrowRightsvgIcon
                    className={classNames(projectcss.all, sty.svg__zOpo)}
                    role={"img"}
                  />
                </Stack__>
              </Stack__>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img___0YR6Z)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"auto"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"160px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/blank_website_mobile_first/images/apriwa2Xpng2.png",
                  fullWidth: 420,
                  fullHeight: 480,
                  aspectRatio: undefined
                }}
              />
            </PlasmicLink__>
            <PlasmicLink__
              data-plasmic-name={"sweater"}
              data-plasmic-override={overrides.sweater}
              className={classNames(projectcss.all, projectcss.a, sty.sweater)}
              component={Link}
              href={`/[slug]`}
              platform={"nextjs"}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__bsHcp)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__paQgs
                  )}
                >
                  {"Sweater"}
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__zgcvr)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__s780T
                    )}
                  >
                    {"Shop Now"}
                  </div>
                  <ArrowRightsvgIcon
                    className={classNames(projectcss.all, sty.svg__zLeDk)}
                    role={"img"}
                  />
                </Stack__>
              </Stack__>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__odZHv)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"auto"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"160px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/blank_website_mobile_first/images/apriwa2Xpng2.png",
                  fullWidth: 420,
                  fullHeight: 480,
                  aspectRatio: undefined
                }}
              />
            </PlasmicLink__>
            <Stack__
              as={"div"}
              data-plasmic-name={"footer2"}
              data-plasmic-override={overrides.footer2}
              hasGap={true}
              className={classNames(projectcss.all, sty.footer2)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"logo2"}
                data-plasmic-override={overrides.logo2}
                hasGap={true}
                className={classNames(projectcss.all, sty.logo2)}
              >
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__fyyAp
                  )}
                  component={Link}
                  href={`/`}
                  platform={"nextjs"}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__pYjWn)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"178px"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/blank_website_mobile_first/images/cncXPsci1Invertedsvg.svg",
                      fullWidth: 178,
                      fullHeight: 40,
                      aspectRatio: 4.45
                    }}
                  />
                </PlasmicLink__>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mjfHt
                  )}
                >
                  {"Official Apparels Partner"}
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"social4"}
                data-plasmic-override={overrides.social4}
                hasGap={true}
                className={classNames(projectcss.all, sty.social4)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__pql2
                  )}
                >
                  {"Connect with Cars and Clo"}
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__eIapZ)}
                >
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__rZk1P
                    )}
                    component={Link}
                    href={"https://www.instagram.com/carsandclo/"}
                    platform={"nextjs"}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__ei87O)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"32px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/blank_website_mobile_first/images/instagramsvg.svg",
                        fullWidth: 32,
                        fullHeight: 32,
                        aspectRatio: 1
                      }}
                    />
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___6Xoc0
                    )}
                    component={Link}
                    href={
                      "https://www.tiktok.com/@carsandclo?_t=8nQ5PnLKxmq&_r=1"
                    }
                    platform={"nextjs"}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__r7Uw)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"32px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/blank_website_mobile_first/images/tiktoksvg.svg",
                        fullWidth: 32,
                        fullHeight: 32,
                        aspectRatio: 1
                      }}
                    />
                  </PlasmicLink__>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"social5"}
                data-plasmic-override={overrides.social5}
                hasGap={true}
                className={classNames(projectcss.all, sty.social5)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__xzVEx
                  )}
                >
                  {"Marketplace"}
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__fWQ)}
                >
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__k1U7
                    )}
                    component={Link}
                    href={"https://shopee.co.id/carsandcloofficial"}
                    platform={"nextjs"}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__bk9Av)}
                      displayHeight={"32px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/blank_website_mobile_first/images/shopeesvg.svg",
                        fullWidth: 84,
                        fullHeight: 32,
                        aspectRatio: 2.625
                      }}
                    />
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__nOjEz
                    )}
                    component={Link}
                    href={"https://www.tokopedia.com/carsandcloofficial"}
                    platform={"nextjs"}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__ulGgi)}
                      displayHeight={"32px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/blank_website_mobile_first/images/tokpedsvg.svg",
                        fullWidth: 99,
                        fullHeight: 32,
                        aspectRatio: 3.09375
                      }}
                    />
                  </PlasmicLink__>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__gAbUl)}
                    displayHeight={"32px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/blank_website_mobile_first/images/tShopsvg.svg",
                      fullWidth: 114,
                      fullHeight: 32,
                      aspectRatio: 3.5625
                    }}
                  />
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__jvgUz)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__dxBpA)}
                    displayHeight={"32px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/blank_website_mobile_first/images/bigcartesvg2.svg",
                      fullWidth: 89,
                      fullHeight: 32,
                      aspectRatio: 2.78125
                    }}
                  />
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"social6"}
                data-plasmic-override={overrides.social6}
                hasGap={true}
                className={classNames(projectcss.all, sty.social6)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__emXu3
                  )}
                >
                  {"Want to collaborate?"}
                </div>
                <Button
                  data-plasmic-name={"button"}
                  data-plasmic-override={overrides.button}
                  className={classNames("__wab_instance", sty.button)}
                  link={"mailto:cloandcars@gmail.com"}
                  shape={"sharp"}
                  showEndIcon={true}
                  target={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__k2Tdj
                    )}
                  >
                    {"Get in touch with us"}
                  </div>
                </Button>
              </Stack__>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__vD3Uv
                )}
              >
                {"\u00a9 2024 Cars and Clo"}
              </div>
            </Stack__>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navigationBar",
    "tShirt",
    "hoodie",
    "sweater",
    "footer2",
    "logo2",
    "social4",
    "social5",
    "social6",
    "button"
  ],
  navigationBar: ["navigationBar"],
  tShirt: ["tShirt"],
  hoodie: ["hoodie"],
  sweater: ["sweater"],
  footer2: ["footer2", "logo2", "social4", "social5", "social6", "button"],
  logo2: ["logo2"],
  social4: ["social4"],
  social5: ["social5"],
  social6: ["social6", "button"],
  button: ["button"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  navigationBar: typeof NavigationBar;
  tShirt: "a";
  hoodie: "a";
  sweater: "a";
  footer2: "div";
  logo2: "div";
  social4: "div";
  social5: "div";
  social6: "div";
  button: typeof Button;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicBridge__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicBridge__VariantsArgs;
    args?: PlasmicBridge__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicBridge__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicBridge__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicBridge__ArgProps,
          internalVariantPropNames: PlasmicBridge__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicBridge__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicBridge";
  } else {
    func.displayName = `PlasmicBridge.${nodeName}`;
  }
  return func;
}

export const PlasmicBridge = Object.assign(
  // Top-level PlasmicBridge renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navigationBar: makeNodeComponent("navigationBar"),
    tShirt: makeNodeComponent("tShirt"),
    hoodie: makeNodeComponent("hoodie"),
    sweater: makeNodeComponent("sweater"),
    footer2: makeNodeComponent("footer2"),
    logo2: makeNodeComponent("logo2"),
    social4: makeNodeComponent("social4"),
    social5: makeNodeComponent("social5"),
    social6: makeNodeComponent("social6"),
    button: makeNodeComponent("button"),

    // Metadata about props expected for PlasmicBridge
    internalVariantProps: PlasmicBridge__VariantProps,
    internalArgProps: PlasmicBridge__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicBridge;
/* prettier-ignore-end */
